@inproceedings{smith2016resolving,
  title={Resolving Input Validation Vulnerabilities by Retracing Taint Flow Through Source Code},
  author={Smith, Justin},
  booktitle={Visual Languages and Human-Centric Computing (VL/HCC), 2016 IEEE Symposium on},
  pages={252--253},
  year={2016},
  organization={IEEE},
  pdf={VLHCC16_GC.pdf}
}

@inproceedings{do2017cheetah,
  title={Cheetah: Just-in-Time Taint Analysis for Android Apps},
  author={Do, Lisa Nguyen Quang and Ali, Karim and Livshits, Benjamin and Bodden, Eric and Smith, Justin and Murphy-Hill, Emerson},
  booktitle={Software Engineering Companion (ICSE-C), 2017 IEEE/ACM 39th International Conference on},
  pages={39--42},
  year={2017},
  organization={IEEE},
  pdf={ICSE17_demo}
}

@inproceedings{smith2016identifying,
  title={Identifying Successful Strategies for Resolving Static Analysis Notifications},
  author={Smith, Justin},
  booktitle={Proceedings of the 38th International Conference on Software Engineering Companion},
  pages={662--664},
  year={2016},
  organization={ACM},
  pdf={ICSE16_SRC.pdf}
}

@inproceedings{smith2018strat, 
  author={J. Smith}, 
  booktitle={2018 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Supporting Effective Strategies for Resolving Vulnerabilities Reported by Static Analysis Tools}, 
  year={2018}, 
  volume={}, 
  number={}, 
  pages={267-268}, 
  abstract={Static analysis tools detect potentially costly security defects early in the software development process. However, these defects can be difficult for developers to accurately and efficiently resolve. The goal of this work is to understand the vulnerability resolution process so that we can build tools that support more effective strategies for resolving vulnerabilities. In this work, I study developers as they resolve security vulnerabilities to identify their information needs and current strategies. Next, I study existing tools to understand how they support developers' strategies. Finally, I plan to demonstrate how strategy-aware tools can help developers resolve security vulnerabilities more accurately and efficiently.}, 
  keywords={program diagnostics;security of data;software tools;static analysis tools;software development process;vulnerability resolution process;security vulnerabilities;strategy-aware tools;security defects;Tools;Security;Static analysis;Usability;Software engineering;Privacy}, 
  doi={10.1109/VLHCC.2018.8506525}, 
  ISSN={1943-6106}, 
  month={Oct},
  pdf={VLHCC18_GC.pdf}
}